% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Probit-control.R
\name{ProbitControl}
\alias{ProbitControl}
\title{Causal inference in probit outcome models with possibly invalid IVs}
\usage{
ProbitControl(
  Y,
  D,
  Z,
  X = NULL,
  d1 = NULL,
  d2 = NULL,
  w0 = NULL,
  bs.Niter = 40,
  intercept = TRUE,
  method = "majority"
)
}
\arguments{
\item{Y}{A vector of outcomes.}

\item{D}{A continuous vector of endogenous variables.}

\item{Z}{A matrix of instruments.}

\item{X}{A matrix of exogenous covariates.}

\item{d1}{a treatment value for computing CATE(d1,d2|w0).}

\item{d2}{a treatment value for computing CATE(d1,d2|w0).}

\item{w0}{a vector for computing CATE(d1,d2|w0).}

\item{bs.Niter}{The number of bootstrap resampling for computing the confidence interval.}

\item{intercept}{Should the intercept be included? Default is \code{TRUE} and if so, you do not need to add a column of 1s in X.}

\item{method}{If 'majority', the method is robust to the presence of possibly invalid IVs; If 'valid', the method assumes all IVs to be valid. (default = 'majority')}
}
\value{
\code{ProbitControl} returns an object of class "SpotIV".
    An object class "SpotIV" is a list containing the following components:
    \item{\code{betaHat}}{The estimate of causal parameter.}
    \item{\code{beta.sdHat}}{The estimated standard deviation of betaHat.}
    \item{\code{cateHat}}{The estimate of CATE(d1,d2|w0).}
    \item{\code{cate.sdHat}}{The estimated standard deviation of \code{cateHat}.}
    \item{\code{SHat}}{The estimated set of relevant IVs.}
    \item{\code{VHat}}{The estimated set of relevant and valid IVs.}
    \item{\code{Maj.pass}}{Whether the majority rule test is passed or not.}
}
\description{
Perform causal inference in the probit outcome model with possibly invalid IVs under the majority rule using SpotIV method.
}
\examples{
\dontrun{
Y <- mroz[,"lwage"]
D <- mroz[,"educ"]
Z <- as.matrix(mroz[,c("motheduc","fatheduc","huseduc","exper","expersq")])
X <- mroz[,"age"]
Y0 <- as.numeric((Y>median(Y)))
d2 = median(D); d1 = d2+1;
w0 = apply(cbind(Z,X)[which(D == d2),], 2, mean)
Probit.model <- ProbitControl(Y0,D,Z,X,d1 = d1,d2 = d2,w0 = w0)
summary(Probit.model)
}



}
