% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Valid-control.R
\name{SemiControl.valid}
\alias{SemiControl.valid}
\title{Causal inference in nonlinear outcome models with valid control functions}
\usage{
SemiControl.valid(Y, D, Z, bs.Niter = 40, intercept = T, d1, d2, z0, bw = NULL)
}
\arguments{
\item{Y}{binary and non-missing, n by 1 numeric outcome vector.}

\item{D}{continuous and non-missing, n by 1 numeric treatment vector.}

\item{Z}{continuous or discrete, non-missing, n by pz numeric instrument matrix, containing p_z instruments.}

\item{bs.Niter}{a positive integer indicating the number of bootstrap resampling for computing the confidence interval.}

\item{intercept}{a boolean scalar indicating to include the intercept or not, with default TRUE.}

\item{d1}{a scalar for computing CATE(d1,d2|z0).}

\item{d2}{a scalar for computing CATE(d1,d2|z0).}

\item{z0}{a pz by 1 vector for computing CATE(d1,d2|z0).}

\item{bw}{a 2 by 1 vector bandwidth specification; default is NULL and the bandwidth is chosen by rule of thumb.}
}
\value{
\item{\code{cateHat}}{a numeric scalar denoting the estimate of CATE(d1,d2|z0).}
    \item{\code{cate.sdHat}}{a numeric scalar denoting the estimated standard deviation of cateHat.}
}
\description{
Causal inference in nonlinear outcome model with IVs, which assumes all the IVs are valid.
}
\examples{
\dontrun{
### Working Low Dimensional Example ###
library(mvtnorm)
library(MASS)
n = 1000; J = 7; s = 5; d1=-1; d2=1; z0=c(rep(0, J-1),0.1)
Z <- matrix(rnorm(n * J, 0, 1) , ncol = J, nrow = n)
gam <- c(rep(0.8, floor(J / 2)), rep(-0.8, J - floor(J / 2)))
cov.noise<-matrix(c(1,0.25, 0.25, 1),ncol=2)
noise.vec<-rmvnorm(n, rep(0,2), cov.noise)
v.vec<-noise.vec[,1]
D = 0.5+Z \%*\% gam  + v.vec

pi0 <- c(rep(0, s), 0.4, 0.2)
beta0 <- 0.25
u.vec<- noise.vec[,2]
Y = (-0.5 + Z \%*\% pi0 + D * beta0 + u.vec>=0)
u1.r<-rnorm(2000,0,sd=1)
cace0 <- mean((as.numeric(-0.5+d1 * beta0 + z0 \%*\% pi0)+ u1.r )>=0) - mean((as.numeric(-0.5+d2 * beta0 + z0 \%*\% pi0) + u1.r)>=0)
SemiControl.valid(Y=Y, D=D, Z=Z, bs.Niter = 40, d1 = d1, d2 = d2, z0 = z0)
}


}
